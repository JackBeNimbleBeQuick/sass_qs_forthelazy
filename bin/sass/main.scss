@import 'vars/var';
@import 'vars/mixes';
@import 'partials/main';

[class*=col-]:before{
  display: table;
  content:" ";
}
.image-wrap,
[class*=col-] {
  position: relative;
  width: 100%;
  min-height: 1px;
}
.image-wrap,
[class*=col-]:after{
  clear: both;
}
[class*=visible-]{
  display: none;
}
[class*=push-] {
  position: relative;
  float: none;;
  left: inherit;;
}
[class*=pull-] {
  position: relative;
  float: none;;
  right: inherit;;
}
.show-all{
  [class*=hide-] {
    display: grid;
  }
  [class*=visible-] {
    display: block;
    visibility: visible;
  }
}
.clearfix {
  display: table;
  clear: both;
}
@each $size, $dims in $framing{
  $min: nth($dims,1);
  $max : nth($dims,2);
  @media (min-width: #{$min}px) and (max-width: #{$max}px){
  //@media (max-width: #{$min}px){
    ul.row.framing li.visible-#{$size},
    .visible-#{$size}{
      display: block;
      visibility: visible;
    }
    .framing.pulling .visible-#{$size}{
      border: 1px solid;
      border-radius: 5px;
      padding: 5px;
    }
    [class*=hide-#{$size}] {
      display: none;
      visibility: hidden;
    }
    [class*=push-#{$size}-] {
      position: relative;
      float: left;
    }
    [class*=push-#{$size}-]:before,
    [class*=push-#{$size}-]:after {
      clear: both;
    }
    [class*=pull-#{$size}-] {
      position: relative;
      float: right;
    }
    [class*=pull-#{$size}-]:before,
    [class*=pull-#{$size}-]:after {
      clear: right;
    }
    [class*=offset-#{$size}-] {
      position: relative;
      clear: both;
    }

    @for $i from 1 through $grid-columns{
      .pull-#{$size}-#{$i} {
        right: percentage($i / $grid-columns);
      }
    }
    @for $i from 1 through $grid-columns{
      .push-#{$size}-#{$i} {
        left: percentage($i / $grid-columns);
      }
    }
    @for $i from 1 through $grid-columns{
      .offset-#{$size}-#{$i} {
        margin-left: percentage($i / $grid-columns);
      }
    }
  }
}
@each $size, $width in $grids{

  @media (max-width: #{$width}px){
    .banner{
      &.main{
        h1{
          font-size: unquote((2*( $width / $max-size))+'em');
        }
      }
    }
  }
  @media (max-width: #{$width}px){

    @each $align in $alignments{
      .text-align-#{$size}-#{$align}{
        text-align: #{$align};
      }
    }

    @for $i from 1 through $grid-columns{
      .col-#{$size}-#{$i} {
        width: percentage($i / $grid-columns);
        float: left;
      }
    }

  }
}

/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
	display: block;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
